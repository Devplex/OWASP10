Name des Angriffs
Broken Access Control

Ziel des Angreifers
- unautorisierte Inhalte einsehen, verändern oder löschen
- nicht autorisierte Funktionen ausführen
- Administration der Seite übernehmen

Schutzmaßnahmen
- Zugriffskontrolle in vertrauten, serverseitigen Code oder serverlosen API durchführen, wo der Angreifer nicht die Zugriffskontrollen-Überprüfungen oder Metadaten modifizieren kann.
- Einmaliges Implementieren der Zugriffskontroll-Mechanismen und Verwenden dieser in der gesamten Applikation.
- Zugriffskontrollen sollten nach Eigentümer der Einträge prüfen anstatt zu akzeptieren, dass der Nutzer jeden Eintrag erstellen, lesen, aktualisieren oder löschen kann.
- Deaktivieren der Webserver-Verzeichnis-Auflistung und sicherstellen, dass sich Datei-Metadaten (z.B. .git) nicht innerhalb Webroots befinden.
- Loggen der Zugriffskontrolle-Fehlschläge und Alarmieren der Admins wenn angemessen(z.B. bei wiederholten Fehlschlägen).

Angriffszenarios
- Angreifer kann bei einem SQL-Aufruf, bei dem auf Account-Informationen mit nicht verfizierten Daten zugegriffen wird, Zugriff auf jeden Account erhalten.
- Angreift erhält durch Eingabe entsprechender URLs z.B. Zugriff auf Adminseite.

Gefährdete Personengruppen
- Unternehmen mit Web-Präsenz
- Personen mit Web-Konten

Umgebung
Systeme mit Zugriffskontroll-Schwachstellen:
- Umgehung von Zugriffskontroll-Überprüfungen, indem URL, interner App-Zustand oder die HTML-Seite modifiziert wird.
- Erlauben, dass der Primärschlüssel zu dem Eintrag eines anderen Nutzers geändert wird, sodass der Account dieses Nutzers eingesehen und verändert werden kann. 

Merkmal
- Zugriffskontroll-Schwachstellen sind aufgrund des Mangels an automatisierter Erkennung und der mangelnden effektiven Testmöglichkeiten üblich.
